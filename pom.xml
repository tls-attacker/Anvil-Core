<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.rub.nds</groupId>
        <artifactId>protocol-toolkit-bom</artifactId>
        <version>6.0.1</version>
    </parent>

    <artifactId>anvil-core</artifactId>
    <version>2.0.6-SNAPSHOT</version>
    <name>Anvil-Core</name>

    <scm>
        <connection>scm:git:https://github.com/tls-attacker/Anvil-Core.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/tls-attacker/Anvil-Core.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/tls-attacker/Anvil-Core</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <!-- The following variables are required for Jenkins CI -->
        <skipTests>false</skipTests>
        <skip.surefire.tests>${skipTests}</skip.surefire.tests>
        <skip.failsafe.tests>${skipTests}</skip.failsafe.tests>
        <!-- Set Coffee4J Anvil version once -->
        <toolkit.common.coffee4j.anvil.version>2.0.1</toolkit.common.coffee4j.anvil.version>
    </properties>

    <dependencies>
        <!-- scope: compile -->
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls</groupId>
            <artifactId>coffee4j-anvil-engine</artifactId>
            <version>${toolkit.common.coffee4j.anvil.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls</groupId>
            <artifactId>coffee4j-anvil-junit-jupiter</artifactId>
            <version>${toolkit.common.coffee4j.anvil.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls</groupId>
            <artifactId>coffee4j-anvil-model</artifactId>
            <version>${toolkit.common.coffee4j.anvil.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
        </dependency>
        <dependency>
            <groupId>org.pcap4j</groupId>
            <artifactId>pcap4j-core</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!--################# default lifecycle plugins #################-->
            <!-- Formatting -->
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <configuration>
                    <java>
                        <lineEndings>GIT_ATTRIBUTES</lineEndings>
                        <trimTrailingWhitespace />
                        <endWithNewline />
                        <importOrder />
                        <removeUnusedImports />
                        <indent>
                            <spaces>true</spaces>
                            <spacesPerTab>4</spacesPerTab>
                        </indent>
                        <googleJavaFormat>
                            <version>1.25.2</version>
                            <style>AOSP</style>
                        </googleJavaFormat>
                        <licenseHeader>
                            <file>${project.basedir}/license_header_plain.txt</file>
                        </licenseHeader>
                    </java>
                </configuration>
            </plugin>
            <!-- Flatten pom.xml before install / deploy phases -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <configuration>
                    <flattenMode>ossrh</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten-clean</id>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <phase>clean</phase>
                    </execution>
                    <execution>
                        <id>flatten</id>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <phase>process-resources</phase>
                    </execution>
                </executions>
            </plugin>
            <!-- Compile source files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <compilerArgs>
                        <compilerArg>-proc:full</compilerArg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <!-- Execute unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <trimStackTrace>false</trimStackTrace>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                    <!-- Allow parallel execution of unit tests (execution in series within test classes) -->
                    <parallel>classes</parallel>
                    <!-- Can be adjusted depending on the local system, 3 should be a fair default value -->
                    <forkCount>3</forkCount>
                    <reuseForks>true</reuseForks>
                    <!-- By default we include all but integration tests during surefire execution -->
                    <excludedGroups>IntegrationTest</excludedGroups>
                    <skipTests>${skip.surefire.tests}</skipTests>
                </configuration>
            </plugin>
            <!-- Build jar file -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <!-- Compile javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Pack source files to jar archive -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Execute integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <!-- By default, the Failsafe plugin excludes various files. We have to override that. -->
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                    <!-- Integration tests and slow tests are started -->
                    <groups>IntegrationTest</groups>
                    <skipITs>${skip.failsafe.tests}</skipITs>
                </configuration>
                <executions>
                    <execution>
                        <id>run-integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <phase>integration-test</phase>
                    </execution>
                    <execution>
                        <id>verify-integration-tests</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <!--############ plugins without lifecycle bindings #############-->
            <!-- Static code analysis -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>delayed-slow-tests</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>default-test</id>
                                </execution>
                                <execution>
                                    <id>run-slow-unit-tests</id>
                                    <goals>
                                        <goal>test</goal>
                                    </goals>
                                    <phase>integration-test</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>coverage</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- Configure JaCoCo to run during unit and integration tests -->
                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>jacoco-prepare-agent</id>
                                    <goals>
                                        <goal>prepare-agent</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>jacoco-prepare-agent-it</id>
                                    <goals>
                                        <goal>prepare-agent-integration</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>jacoco-merge</id>
                                    <goals>
                                        <goal>merge</goal>
                                    </goals>
                                    <phase>post-integration-test</phase>
                                    <configuration>
                                        <destFile>${project.build.outputDirectory}/jacoco.merged.exec</destFile>
                                        <fileSets>
                                            <fileSet>
                                                <directory>${project.build.directory}</directory>
                                                <includes>
                                                    <include>jacoco.exec</include>
                                                    <include>jacoco-it.exec</include>
                                                </includes>
                                            </fileSet>
                                        </fileSets>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>jacoco-report</id>
                                    <goals>
                                        <goal>report</goal>
                                    </goals>
                                    <phase>verify</phase>
                                    <configuration>
                                        <dataFile>${project.build.outputDirectory}/jacoco.merged.exec</dataFile>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

</project>
